{
  "openapi": "3.0.3",
  "info": {
    "title": "server",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/beta/balance/chains": {
      "get": {
        "tags": ["crate::handlers::chains_handler"],
        "operationId": "chains_handler",
        "parameters": [
          {
            "name": "X-DUNE-API-KEY",
            "in": "header",
            "description": "API key to access the service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChainsResponse"
                },
                "example": {
                  "chains": [
                    {
                      "id": 1,
                      "name": "ethereum",
                      "supported_assets": ["native", "erc20"]
                    },
                    {
                      "id": 42161,
                      "name": "arbitrum",
                      "supported_assets": ["native", "erc20"]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error - A generic error occurred on the server."
          }
        }
      }
    },
    "/beta/balance/{address}": {
      "get": {
        "tags": ["crate::handlers::balances::balances_handler"],
        "operationId": "balances_handler",
        "parameters": [
          {
            "name": "X-DUNE-API-KEY",
            "in": "header",
            "description": "API key to access the service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "path",
            "description": "Wallet to get balances for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all_chains",
            "in": "query",
            "description": "Specify this to get native balances for a long tail of evm chains, where we donâ€™t support erc20 assets",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chain_ids",
            "in": "query",
            "description": "Comma separated list of chain ids to get balances for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exclude_spam_tokens",
            "in": "query",
            "description": "Specify this to exclude spam tokens from the response",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Specify `erc20` or `native` to get only erc20 tokens or native assets, respectively",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                },
                "example": {
                  "balances": [
                    {
                      "address": "native",
                      "amount": "605371497350928252303",
                      "chain": "ethereum",
                      "decimals": 18,
                      "price_usd": 3042.816964922323,
                      "symbol": "ETH",
                      "value_usd": 1842034.6622198338
                    }
                  ],
                  "request_time": "2023-11-07T05:31:56Z",
                  "response_time": "2023-11-07T05:31:56Z",
                  "wallet_address": "0xd8da6bf26964af9d7eed9e03e53415d37aa96045"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error - A generic error occurred on the server."
          }
        }
      }
    },
    "/beta/balance/{chain}/{address}": {
      "get": {
        "tags": ["crate::handlers::balances::blockchain_balances_handler"],
        "operationId": "blockchain_balances_handler",
        "parameters": [
          {
            "name": "X-DUNE-API-KEY",
            "in": "header",
            "description": "API key to access the service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chain",
            "in": "path",
            "description": "Chain to get balances for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "path",
            "description": "Wallet to get balances for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exclude_spam_tokens",
            "in": "query",
            "description": "Specify this to exclude spam tokens from the response",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "description": "Specify `erc20` or `native` to get only erc20 tokens or native assets, respectively",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ready",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesResponse"
                },
                "example": {
                  "balances": [
                    {
                      "address": "native",
                      "amount": "605371497350928252303",
                      "chain": "ethereum",
                      "decimals": 18,
                      "price_usd": 3042.816964922323,
                      "symbol": "ETH",
                      "value_usd": 1842034.6622198338
                    }
                  ],
                  "request_time": "2023-11-07T05:31:56Z",
                  "response_time": "2023-11-07T05:31:56Z",
                  "wallet_address": "0xd8da6bf26964af9d7eed9e03e53415d37aa96045"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error - A generic error occurred on the server."
          }
        }
      }
    },
    "/beta/ready": {
      "get": {
        "tags": ["crate::handlers::ready_handler"],
        "operationId": "ready_handler",
        "responses": {
          "200": {
            "description": "Ready"
          },
          "400": {
            "description": "Not ready"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BalanceData": {
        "type": "object",
        "required": ["chain", "chain_id", "address", "amount"],
        "properties": {
          "address": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "chain": {
            "type": "string"
          },
          "chain_id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "decimals": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "price_usd": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "value_usd": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "BalanceErrorInformation": {
        "type": "object",
        "required": ["chain", "chain_id", "address"],
        "properties": {
          "address": {
            "type": "string"
          },
          "chain": {
            "type": "string"
          },
          "chain_id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "description": {
            "type": "string"
          }
        }
      },
      "BalanceErrors": {
        "type": "object",
        "required": ["token_errors"],
        "properties": {
          "token_errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceErrorInformation"
            }
          }
        }
      },
      "BalancesResponse": {
        "type": "object",
        "required": [
          "request_time",
          "response_time",
          "wallet_address",
          "balances"
        ],
        "properties": {
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceData"
            }
          },
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BalanceErrors"
              }
            ],
            "nullable": true
          },
          "request_time": {
            "type": "string"
          },
          "response_time": {
            "type": "string"
          },
          "wallet_address": {
            "type": "string",
            "example": "0xd8da6bf26964af9d7eed9e03e53415d37aa96045"
          }
        }
      },
      "ChainEntry": {
        "type": "object",
        "required": ["name", "id", "supported_assets"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "name": {
            "type": "string"
          },
          "supported_assets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ChainsResponse": {
        "type": "object",
        "required": ["chains"],
        "properties": {
          "chains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChainEntry"
            }
          }
        }
      }
    }
  }
}
